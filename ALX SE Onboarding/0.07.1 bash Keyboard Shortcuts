# Working With Processes 
Ctrl+C		kill the current foreground process
Ctrl+Z		Suspend the current foreground process
			To return the process   $ fg process_name   
Ctrl+D		Close the bash shell = $ exit

# Controlling the Screen 
Ctrl+L		Clear the screen = $clear
Ctrl+S		Stop all output to the screen
Ctrl+Q		Resume output to the screen
			after stopping it with Ctrl+S

# Moving the Cursor 
Ctrl+A [Home]	Go to the beginning of the line.
Ctrl+E [End]	Go to the end of the line.
Alt+B			Go left (back) one word.
Ctrl+B			Go left (back) one character.
Alt+F			Go right (forward) one word.
Ctrl+F			Go right (forward) one character. 
Ctrl+XX			Move between the beginning of the line and the current position of the cursor.

# Deleting Text 
Ctrl+D [Delete]		Delete the character under the cursor.
Alt+D				Delete all characters after the cursor on the current line.
Ctrl+H [Backspace]	Delete the character before the cursor.

# Fixing Typos 
Alt+T		Swap the current word with the previous word.
Ctrl+T		Swap the last two characters before the cursor with each other.
			when you type two characters in the wrong order.
Ctrl+_		Undo your last key press. repeat to undo multiple times.

# Cutting and Pasting 
Ctrl+W		Cut the word before the cursor, adding it to the clipboard.
Ctrl+K		Cut the part of the line after the cursor, adding it to the clipboard.
Ctrl+U		Cut the part of the line before the cursor, adding it to the clipboard.
Ctrl+Y		Paste the last thing you cut from the clipboard. The y here stands for "yank".

# Capitalizing Characters 
Alt+U		Capitalize every character from the cursor to the end of the current word.
Alt+L		Uncapitalize every character from the cursor to the end of the current word.
Alt+C		Capitalize the character under the cursor. Your cursor will move to the end of the current word.

# Tab Completion 
Tab		Automatically complete the file, directory, or command.

# Command History 
Ctrl+P [Up Arrow]		Go to the previous command in the command history.
Ctrl+N [Down Arrow]		Go to the next command in the command history.
Alt+R					Revert any changes to a command you've pulled from your history if you've edited it.

# "recall" search
Ctrl+R		Recall the last command matching the characters you provide. 
			Press this shortcut and start typing to search your bash history for a command.
Ctrl+O		Run a command you found with Ctrl+R.
Ctrl+G		Leave history searching mode without running a command.


===================================================

Sure, here is how you can create an executable bash file:

1. Create a new file and save it with the `.sh` extension.
2. In the file, add the following line:

```
#!/bin/bash
```

3. Add the code that you want to execute in the file.
4. Save the file.
5. Make the file executable by running the following command:

```
chmod +x <filename>
```

For example, if you create a file called `hello.sh` with the following contents:

```
#!/bin/bash

echo "Hello, world!"
```

You can make the file executable by running the following command:

```
chmod +x hello.sh
```

Once you have made the file executable, you can run it by typing the following command in your terminal:

```
./hello.sh
```

The `./` prefix tells the shell to run the file as an executable.

The `hello.sh` file will print the following output to the terminal:

```
Hello, world!
```

I hope this helps! Let me know if you have any other questions.



